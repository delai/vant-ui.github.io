import{o as t,a,z as n}from"./vue-libs-12a1683e.js";const e={class:"van-doc-markdown-body"},l=n(`<h1>Signature</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Component for signature scene, based on Canvas. Please upgrade <code>vant</code> to &gt;= v4.3.0 before using this component.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce" target="_blank">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;
<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Signature</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;

<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();
app.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Signature</span>);
</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-signature</span> @<span class="hljs-attr">submit</span>=<span class="hljs-string">&quot;onSubmit&quot;</span> @<span class="hljs-attr">clear</span>=<span class="hljs-string">&quot;onClear&quot;</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">van-image</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;demoUrl&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;demoUrl&quot;</span> /&gt;</span>
</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {
  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {
    <span class="hljs-keyword">const</span> demoUrl = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);

    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSubmit</span> = (<span class="hljs-params">data</span>) =&gt; {
      <span class="hljs-keyword">const</span> { filePath, canvas } = data;
      demoUrl.<span class="hljs-property">value</span> = filePath;

      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#39;submit&#39;</span>, canvas, filePath);
    };

    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onClear</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#39;clear&#39;</span>);

    <span class="hljs-keyword">return</span> {
      onSubmit,
      onClear,
      demoUrl,
    };
  },
};
</code></pre></div><div class="van-doc-card"><h3 id="pen-color" tabindex="-1">Pen Color</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-signature</span> <span class="hljs-attr">pen-color</span>=<span class="hljs-string">&quot;#ff0000&quot;</span> @<span class="hljs-attr">submit</span>=<span class="hljs-string">&quot;onSubmit&quot;</span> @<span class="hljs-attr">clear</span>=<span class="hljs-string">&quot;onClear&quot;</span> /&gt;</span>
</code></pre></div><div class="van-doc-card"><h3 id="linewidth" tabindex="-1">LineWidth</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-signature</span> <span class="hljs-attr">:line-width</span>=<span class="hljs-string">&quot;6&quot;</span> @<span class="hljs-attr">submit</span>=<span class="hljs-string">&quot;onSubmit&quot;</span> @<span class="hljs-attr">clear</span>=<span class="hljs-string">&quot;onClear&quot;</span> /&gt;</span>
</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Parameter</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>type</td><td>Export image type</td><td><em>string</em></td><td><code>png</code></td></tr><tr><td>pen-color</td><td>Color of the brush stroke, default is black</td><td><em>string</em></td><td><code>#000</code></td></tr><tr><td>line-width</td><td>Width of the line</td><td><em>number</em></td><td><code>3</code></td></tr><tr><td>tips</td><td>Text that appears when Canvas is not supported</td><td><em>string</em></td><td>-</td></tr><tr><td>cancel-button-text</td><td>Cancel button text</td><td><em>string</em></td><td><code>Cancel</code></td></tr><tr><td>confirm-button-text</td><td>Confirm button text</td><td><em>string</em></td><td><code>Confirm</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event Name</th><th>Description</th><th>Callback Parameters</th></tr></thead><tbody><tr><td>start</td><td>Callback for start of signature</td><td>-</td></tr><tr><td>end</td><td>Callback for end of signature</td><td>-</td></tr><tr><td>signing</td><td>Callback for signature in progress</td><td><em>event: TouchEvent</em></td></tr><tr><td>submit</td><td>submit button click</td><td><em>data: {canvas: HTMLCanvasElement, filePath: string}</em></td></tr><tr><td>clear</td><td>clear button click</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-js"><span class="hljs-keyword">import</span> type { <span class="hljs-title class_">SignatureProps</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;
</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider" target="_blank">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>--van-signature-padding</td><td><em>var(--van-padding-xs)</em></td><td>-</td></tr><tr><td>--van-signature-content-height</td><td><em>200px</em></td><td>Height of the canvas</td></tr><tr><td>--van-signature-content-background</td><td><em>var(--van-background-2)</em></td><td>Background color of the canvas</td></tr><tr><td>--van-signature-content-border</td><td><em>1px dotted #dadada</em></td><td>Border style of the canvas</td></tr></tbody></table></div>`,13),d=[l],h={__name:"README",setup(r,{expose:s}){return s({frontmatter:{}}),(p,c)=>(t(),a("div",e,d))}};export{h as default};
