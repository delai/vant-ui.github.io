import{_ as l}from"./locales-e2cb6d3e.js";import{o as d,a as o,d as s,g as t,t as e,z as a}from"./vue-libs-19c20d28.js";const c={},p={class:"van-doc-markdown-body"},i=a(`<h1>Tab</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to switch between different content areas.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce" target="_blank">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;
<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Tab</span>, <span class="hljs-title class_">Tabs</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;

<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();
app.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Tab</span>);
app.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Tabs</span>);
</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2>`,4),h={class:"van-doc-card"},r=s("h3",{id:"basic-usage",tabindex:"-1"},"Basic Usage",-1),m=s("p",null,[t("The first tab is active by default, you can set "),s("code",null,"v-model:active"),t(" to active specified tab.")],-1),j={class:"language-html"},b=s("span",{class:"hljs-tag"},[t("<"),s("span",{class:"hljs-name"},"van-tabs"),t(),s("span",{class:"hljs-attr"},"v-model:active"),t("="),s("span",{class:"hljs-string"},'"active"'),t(">")],-1),g=a('<span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 4&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab&#39; + index&quot;</span>&gt;</span>',1),u=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tab"),t(">")],-1),v=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tabs"),t(">")],-1),_=a(`<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {
  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {
    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);
    <span class="hljs-keyword">return</span> { active };
  },
};
</code></pre>`,1),f=a(`<div class="van-doc-card"><h3 id="match-by-name" tabindex="-1">Match By Name</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;activeName&quot;</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;tab 1&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;a&quot;</span>&gt;</span>content of tab 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;tab 2&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;b&quot;</span>&gt;</span>content of tab 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;tab 3&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;c&quot;</span>&gt;</span>content of tab 3<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>
</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {
  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {
    <span class="hljs-keyword">const</span> activeName = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;a&#39;</span>);
    <span class="hljs-keyword">return</span> { activeName };
  },
};
</code></pre></div>`,1),y={class:"van-doc-card"},w=s("h3",{id:"swipe-tabs",tabindex:"-1"},"Swipe Tabs",-1),q=s("p",null,[t("By default more than 5 tabs, you can scroll through the tabs. You can set "),s("code",null,"swipe-threshold"),t(" attribute to customize threshold number.")],-1),k={class:"language-html"},x=s("span",{class:"hljs-tag"},[t("<"),s("span",{class:"hljs-name"},"van-tabs"),t(),s("span",{class:"hljs-attr"},"v-model:active"),t("="),s("span",{class:"hljs-string"},'"active"'),t(">")],-1),T=a('<span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 8&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab&#39; + index&quot;</span>&gt;</span>',1),C=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tab"),t(">")],-1),S=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tabs"),t(">")],-1),z={class:"van-doc-card"},I=s("h3",{id:"disabled-tab",tabindex:"-1"},"Disabled Tab",-1),D=s("p",null,[t("Use "),s("code",null,"disabled"),t(" prop to disable a tab.")],-1),P={class:"language-html"},W=s("span",{class:"hljs-tag"},[t("<"),s("span",{class:"hljs-name"},"van-tabs"),t(),s("span",{class:"hljs-attr"},"v-model:active"),t("="),s("span",{class:"hljs-string"},'"active"'),t(">")],-1),A=a('<span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 3&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab&#39; + index&quot;</span> <span class="hljs-attr">:disabled</span>=<span class="hljs-string">&quot;index === 2&quot;</span>&gt;</span>',1),E=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tab"),t(">")],-1),N=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tabs"),t(">")],-1),R={class:"van-doc-card"},U=s("h3",{id:"card-style",tabindex:"-1"},"Card Style",-1),B=s("p",null,"Tabs styled as cards.",-1),V={class:"language-html"},M=a('<span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;card&quot;</span>&gt;</span>',1),L=a('<span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 3&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab&#39; + index&quot;</span>&gt;</span>',1),F=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tab"),t(">")],-1),G=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tabs"),t(">")],-1),H={class:"van-doc-card"},Y=s("h3",{id:"click-tab-event",tabindex:"-1"},"Click Tab Event",-1),J={class:"language-html"},K=a('<span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> @<span class="hljs-attr">click-tab</span>=<span class="hljs-string">&quot;onClickTab&quot;</span>&gt;</span>',1),O=a('<span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 2&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab&#39; + index&quot;</span>&gt;</span>',1),Q=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tab"),t(">")],-1),X=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tabs"),t(">")],-1),Z=a(`<pre><code class="language-js"><span class="hljs-keyword">import</span> { showToast } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {
  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {
    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onClickTab</span> = (<span class="hljs-params">{ title }</span>) =&gt; <span class="hljs-title function_">showToast</span>(title);
    <span class="hljs-keyword">return</span> {
      onClickTab,
    };
  },
};
</code></pre>`,1),$={class:"van-doc-card"},ss=s("h3",{id:"sticky",tabindex:"-1"},"Sticky",-1),ts=s("p",null,"In sticky mode, the tab nav will be fixed to top when scroll to top.",-1),as={class:"language-html"},ns=a('<span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">sticky</span>&gt;</span>',1),es=a('<span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 4&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab &#39; + index&quot;</span>&gt;</span>',1),ls=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tab"),t(">")],-1),ds=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tabs"),t(">")],-1),os={class:"van-doc-card"},cs=s("h3",{id:"shrink",tabindex:"-1"},"Shrink",-1),ps=s("p",null,"In shrink mode, the tabs will be shrinked to the left.",-1),is={class:"language-html"},hs=a('<span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">shrink</span>&gt;</span>',1),rs=a('<span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 4&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab &#39; + index&quot;</span>&gt;</span>',1),ms=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tab"),t(">")],-1),js=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tabs"),t(">")],-1),bs={class:"van-doc-card"},gs=s("h3",{id:"custom-title",tabindex:"-1"},"Custom title",-1),us=s("p",null,"Use title slot to custom tab title.",-1),vs={class:"language-html"},_s=s("span",{class:"hljs-tag"},[t("<"),s("span",{class:"hljs-name"},"van-tabs"),t(),s("span",{class:"hljs-attr"},"v-model:active"),t("="),s("span",{class:"hljs-string"},'"active"'),t(">")],-1),fs=s("span",{class:"hljs-tag"},[t("<"),s("span",{class:"hljs-name"},"van-tab"),t(),s("span",{class:"hljs-attr"},"v-for"),t("="),s("span",{class:"hljs-string"},'"index in 2"'),t(">")],-1),ys=s("span",{class:"hljs-tag"},[t("<"),s("span",{class:"hljs-name"},"template"),t(" #"),s("span",{class:"hljs-attr"},"title"),t(">")],-1),ws=s("span",{class:"hljs-tag"},[t("<"),s("span",{class:"hljs-name"},"van-icon"),t(),s("span",{class:"hljs-attr"},"name"),t("="),s("span",{class:"hljs-string"},'"more-o"'),t(" />")],-1),qs=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"template"),t(">")],-1),ks=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tab"),t(">")],-1),xs=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tabs"),t(">")],-1),Ts={class:"van-doc-card"},Cs=s("h3",{id:"switch-animation",tabindex:"-1"},"Switch Animation",-1),Ss=s("p",null,[t("Use "),s("code",null,"animated"),t(" props to change tabs with animation.")],-1),zs={class:"language-html"},Is=a('<span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">animated</span>&gt;</span>',1),Ds=a('<span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 4&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab &#39; + index&quot;</span>&gt;</span>',1),Ps=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tab"),t(">")],-1),Ws=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tabs"),t(">")],-1),As={class:"van-doc-card"},Es=s("h3",{id:"swipeable",tabindex:"-1"},"Swipeable",-1),Ns=s("p",null,"In swipeable mode, you can switch tabs with swipe gesture in the content.",-1),Rs={class:"language-html"},Us=a('<span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">swipeable</span>&gt;</span>',1),Bs=a('<span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 4&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab &#39; + index&quot;</span>&gt;</span>',1),Vs=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tab"),t(">")],-1),Ms=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tabs"),t(">")],-1),Ls={class:"van-doc-card"},Fs=s("h3",{id:"scrollspy",tabindex:"-1"},"Scrollspy",-1),Gs=s("p",null,"In scrollspy mode, the list of content will be tiled.",-1),Hs={class:"language-html"},Ys=a('<span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">scrollspy</span> <span class="hljs-attr">sticky</span>&gt;</span>',1),Js=a('<span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 8&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab &#39; + index&quot;</span>&gt;</span>',1),Ks=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tab"),t(">")],-1),Os=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tabs"),t(">")],-1),Qs={class:"van-doc-card"},Xs=s("h3",{id:"before-change",tabindex:"-1"},"Before Change",-1),Zs={class:"language-html"},$s=a('<span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">:before-change</span>=<span class="hljs-string">&quot;beforeChange&quot;</span>&gt;</span>',1),st=a('<span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 4&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab &#39; + index&quot;</span>&gt;</span>',1),tt=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tab"),t(">")],-1),at=s("span",{class:"hljs-tag"},[t("</"),s("span",{class:"hljs-name"},"van-tabs"),t(">")],-1),nt=a(`<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {
  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {
    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);
    <span class="hljs-keyword">const</span> <span class="hljs-title function_">beforeChange</span> = (<span class="hljs-params">index</span>) =&gt; {
      <span class="hljs-comment">// prevent change</span>
      <span class="hljs-keyword">if</span> (index === <span class="hljs-number">1</span>) {
        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;
      }

      <span class="hljs-comment">// async</span>
      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {
        <span class="hljs-title function_">resolve</span>(index !== <span class="hljs-number">3</span>);
      });
    };

    <span class="hljs-keyword">return</span> {
      active,
      beforeChange,
    };
  },
};
</code></pre>`,1),et=a(`<h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="tabs-props" tabindex="-1">Tabs Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model:active</td><td>Index of active tab</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>type</td><td>Can be set to <code>line</code> <code>card</code></td><td><em>string</em></td><td><code>line</code></td></tr><tr><td>color</td><td>Tab color</td><td><em>string</em></td><td><code>#1989fa</code></td></tr><tr><td>background</td><td>Background color</td><td><em>string</em></td><td><code>white</code></td></tr><tr><td>duration</td><td>Toggle tab&#39;s animation time</td><td><em>number | string</em></td><td><code>0.3</code></td></tr><tr><td>line-width</td><td>Width of tab line</td><td><em>number | string</em></td><td><code>40px</code></td></tr><tr><td>line-height</td><td>Height of tab line</td><td><em>number | string</em></td><td><code>3px</code></td></tr><tr><td>animated</td><td>Whether to change tabs with animation</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>border</td><td>Whether to show border when <code>type=&quot;line&quot;</code></td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>ellipsis</td><td>Whether to ellipsis too long title</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>sticky</td><td>Whether to use sticky mode</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>shrink</td><td>Whether to shrink the the tabs to the left</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>swipeable</td><td>Whether to enable gestures to slide left and right</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>lazy-render</td><td>Whether to enable tab content lazy render</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>scrollspy</td><td>Whether to use scrollspy mode</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>offset-top</td><td>Sticky offset top , supports <code>px</code> <code>vw</code> <code>vh</code> <code>rem</code> unit, default <code>px</code></td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>swipe-threshold</td><td>Set swipe tabs threshold</td><td><em>number | string</em></td><td><code>5</code></td></tr><tr><td>title-active-color</td><td>Title active color</td><td><em>string</em></td><td>-</td></tr><tr><td>title-inactive-color</td><td>Title inactive color</td><td><em>string</em></td><td>-</td></tr><tr><td>before-change</td><td>Callback function before changing tabs, return <code>false</code> to prevent change, support return Promise</td><td><em>(name: number | string) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="tab-props" tabindex="-1">Tab Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>title</td><td>Title</td><td><em>string</em></td><td>-</td></tr><tr><td>disabled</td><td>Whether to disable tab</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>dot</td><td>Whether to show red dot on the title</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>badge</td><td>Content of the badge on the title</td><td><em>number | string</em></td><td>-</td></tr><tr><td>name</td><td>Identifier</td><td><em>number | string</em></td><td>Index of tab</td></tr><tr><td>url</td><td>Link</td><td><em>string</em></td><td>-</td></tr><tr><td>to</td><td>The target route should navigate to when clicked on, same as the <a href="https://router.vuejs.org/api/interfaces/RouterLinkProps.html#Properties-to" target="_blank">to prop</a> of Vue Router</td><td><em>string | object</em></td><td>-</td></tr><tr><td>replace</td><td>If true, the navigation will not leave a history record</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>title-style</td><td>Custom title style</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>title-class</td><td>Custom title class name</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>show-zero-badge</td><td>Whether to show badge when the value is zero</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="tabs-events" tabindex="-1">Tabs Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click-tab</td><td>Emitted when a tab is clicked</td><td><em>{ name: string | number, title: string, event: MouseEvent, disabled: boolean }</em></td></tr><tr><td>change</td><td>Emitted when active tab changed</td><td><em>name: string | number, title: string</em></td></tr><tr><td>rendered</td><td>Emitted when content first rendered in lazy-render mode</td><td><em>name: string | number, title: string</em></td></tr><tr><td>scroll</td><td>Emitted when tab scrolling in sticky mode</td><td><em>{ scrollTop: number, isFixed: boolean }</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="tabs-methods" tabindex="-1">Tabs Methods</h3><p>Use <a href="https://vuejs.org/guide/essentials/template-refs.html" target="_blank">ref</a> to get Tabs instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>resize</td><td>Resize Tabs when container element resized or visibility changed</td><td>-</td><td>-</td></tr><tr><td>scrollTo</td><td>Go to specified tab in scrollspy mode</td><td><em>name: string | number</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">TabProps</span>, <span class="hljs-title class_">TabsType</span>, <span class="hljs-title class_">TabsProps</span>, <span class="hljs-title class_">TabsInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;
</code></pre><p><code>TabsInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;
<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">TabsInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;

<span class="hljs-keyword">const</span> tabsRef = ref&lt;<span class="hljs-title class_">TabsInstance</span>&gt;();

tabsRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">scrollTo</span>(<span class="hljs-number">0</span>);
</code></pre></div><div class="van-doc-card"><h3 id="tabs-slots" tabindex="-1">Tabs Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>nav-left</td><td>Custom nav left content</td></tr><tr><td>nav-right</td><td>Custom nav right content</td></tr><tr><td>nav-bottom</td><td>Custom nav bottom content</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="tab-slots" tabindex="-1">Tab Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Content of tab</td></tr><tr><td>title</td><td>Custom tab title</td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider" target="_blank">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>--van-tab-text-color</td><td><em>var(--van-gray-7)</em></td><td>-</td></tr><tr><td>--van-tab-active-text-color</td><td><em>var(--van-text-color)</em></td><td>-</td></tr><tr><td>--van-tab-disabled-text-color</td><td><em>var(--van-text-color-3)</em></td><td>-</td></tr><tr><td>--van-tab-font-size</td><td><em>var(--van-font-size-md)</em></td><td>-</td></tr><tr><td>--van-tab-line-height</td><td><em>var(--van-line-height-md)</em></td><td>-</td></tr><tr><td>--van-tabs-default-color</td><td><em>var(--van-primary-color)</em></td><td>-</td></tr><tr><td>--van-tabs-line-height</td><td><em>44px</em></td><td>-</td></tr><tr><td>--van-tabs-card-height</td><td><em>30px</em></td><td>-</td></tr><tr><td>--van-tabs-nav-background</td><td><em>var(--van-background-2)</em></td><td>-</td></tr><tr><td>--van-tabs-bottom-bar-width</td><td><em>40px</em></td><td>-</td></tr><tr><td>--van-tabs-bottom-bar-height</td><td><em>3px</em></td><td>-</td></tr><tr><td>--van-tabs-bottom-bar-color</td><td><em>var(--van-primary-color)</em></td><td>-</td></tr></tbody></table></div>`,10);function lt(n,dt){return d(),o("div",p,[i,s("div",h,[r,m,s("pre",null,[s("code",j,[b,t(`
  `),g,t(`
    content of tab `+e(n.index)+`
  `,1),u,t(`
`),v,t(`
`)])]),_]),f,s("div",y,[w,q,s("pre",null,[s("code",k,[x,t(`
  `),T,t(`
    content of tab `+e(n.index)+`
  `,1),C,t(`
`),S,t(`
`)])])]),s("div",z,[I,D,s("pre",null,[s("code",P,[W,t(`
  `),A,t(`
    content of tab `+e(n.index)+`
  `,1),E,t(`
`),N,t(`
`)])])]),s("div",R,[U,B,s("pre",null,[s("code",V,[M,t(`
  `),L,t(`
    content of tab `+e(n.index)+`
  `,1),F,t(`
`),G,t(`
`)])])]),s("div",H,[Y,s("pre",null,[s("code",J,[K,t(`
  `),O,t(`
    content of tab `+e(n.index)+`
  `,1),Q,t(`
`),X,t(`
`)])]),Z]),s("div",$,[ss,ts,s("pre",null,[s("code",as,[ns,t(`
  `),es,t(`
    content `+e(n.index)+`
  `,1),ls,t(`
`),ds,t(`
`)])])]),s("div",os,[cs,ps,s("pre",null,[s("code",is,[hs,t(`
  `),rs,t(`
    content `+e(n.index)+`
  `,1),ms,t(`
`),js,t(`
`)])])]),s("div",bs,[gs,us,s("pre",null,[s("code",vs,[_s,t(`
  `),fs,t(`
    `),ys,t(),ws,t("tab "),qs,t(`
    content `+e(n.index)+`
  `,1),ks,t(`
`),xs,t(`
`)])])]),s("div",Ts,[Cs,Ss,s("pre",null,[s("code",zs,[Is,t(`
  `),Ds,t(`
    content `+e(n.index)+`
  `,1),Ps,t(`
`),Ws,t(`
`)])])]),s("div",As,[Es,Ns,s("pre",null,[s("code",Rs,[Us,t(`
  `),Bs,t(`
    content `+e(n.index)+`
  `,1),Vs,t(`
`),Ms,t(`
`)])])]),s("div",Ls,[Fs,Gs,s("pre",null,[s("code",Hs,[Ys,t(`
  `),Js,t(`
    content `+e(n.index)+`
  `,1),Ks,t(`
`),Os,t(`
`)])])]),s("div",Qs,[Xs,s("pre",null,[s("code",Zs,[$s,t(`
  `),st,t(`
    content `+e(n.index)+`
  `,1),tt,t(`
`),at,t(`
`)])]),nt]),et])}const pt=l(c,[["render",lt]]);export{pt as default};
