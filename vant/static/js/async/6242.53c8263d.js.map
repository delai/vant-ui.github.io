{"version":3,"file":"static/js/async/6242.53c8263d.js","sources":["../../../node_modules/.pnpm/vue-loader@17.3.1_vue@3.3.4_webpack@5.89.0/node_modules/vue-loader/dist/index.js??clonedRuleSet-32.use[0]!../cjs/md-loader.cjs!../../vant/docs/markdown/use-raf.zh-CN.md","../../vant/docs/markdown/use-raf.zh-CN.md"],"sourcesContent":["import { render } from \"./use-raf.zh-CN.md.js?vue&type=template&id=2b1818de!=!../../../../node_modules/.pnpm/vue-loader@17.3.1_vue@3.3.4_webpack@5.89.0/node_modules/vue-loader/dist/index.js??clonedRuleSet-32.use[0]!../../../vant-cli/cjs/md-loader.cjs!./use-raf.zh-CN.md?vue&type=template&id=2b1818de\"\nconst script = {}\n\nimport exportComponent from \"../../../../node_modules/.pnpm/vue-loader@17.3.1_vue@3.3.4_webpack@5.89.0/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template><div class=\"van-doc-markdown-body\"><h1>useRaf</h1>\n<div class=\"van-doc-card\"><h3 id=\"jie-shao\" tabindex=\"-1\">介绍</h3>\n<p>提供便捷的 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/window/requestAnimationFrame\" target=\"_blank\">requestAnimationFrame</a> 的调用和取消。</p>\n</div><h2 id=\"dai-ma-yan-shi\" tabindex=\"-1\">代码演示</h2>\n<div class=\"van-doc-card\"><h3 id=\"dan-ci-diao-yong\" tabindex=\"-1\">单次调用</h3>\n<p>通过 <code v-pre>useRaf</code> 方法，可以在下一次浏览器重新绘制之前调用指定的函数。</p>\n<pre><code class=\"language-js\" v-pre><span class=\"hljs-keyword\">import</span> { useRaf } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@vant/use&#x27;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-title function_\">setup</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">let</span> count = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-title function_\">useRaf</span>(<span class=\"hljs-function\">() =&gt;</span> {\n      <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(++count); <span class=\"hljs-comment\">// 只会执行 1 次</span>\n    });\n  },\n};\n</code></pre>\n</div><div class=\"van-doc-card\"><h3 id=\"xun-huan-diao-yong\" tabindex=\"-1\">循环调用</h3>\n<p>通过开启 <code v-pre>isLoop</code> 选项，你可以按指定的间隔重复执行某个函数，直到被取消。</p>\n<pre><code class=\"language-js\" v-pre><span class=\"hljs-keyword\">import</span> { useRaf } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@vant/use&#x27;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-title function_\">setup</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">let</span> count = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">const</span> cancelRaf = <span class=\"hljs-title function_\">useRaf</span>(\n      <span class=\"hljs-function\">() =&gt;</span> {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(++count); <span class=\"hljs-comment\">// 无限执行，直到被 cancel</span>\n\n        <span class=\"hljs-keyword\">if</span> (count === <span class=\"hljs-number\">5</span>) {\n          <span class=\"hljs-title function_\">cancelRaf</span>();\n        }\n      },\n      {\n        <span class=\"hljs-attr\">isLoop</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-comment\">// 开启循环</span>\n        <span class=\"hljs-attr\">interval</span>: <span class=\"hljs-number\">100</span>, <span class=\"hljs-comment\">// 设置调用间隔</span>\n      },\n    );\n  },\n};\n</code></pre>\n</div><h2 id=\"api\" tabindex=\"-1\">API</h2>\n<div class=\"van-doc-card\"><h3 id=\"lei-xing-ding-yi\" tabindex=\"-1\">类型定义</h3>\n<pre><code class=\"language-ts\" v-pre><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">useRaf</span>(<span class=\"hljs-params\">\n  callback: () =&gt; <span class=\"hljs-built_in\">void</span>,\n  options: {\n    interval?: <span class=\"hljs-built_in\">number</span>;\n    isLoop?: <span class=\"hljs-built_in\">boolean</span>;\n  },\n</span>): <span class=\"hljs-built_in\">void</span>;\n</code></pre>\n</div><div class=\"van-doc-card\"><h3 id=\"can-shu\" tabindex=\"-1\">参数</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>callback</td>\n<td>回调函数</td>\n<td><em>() =&gt; void</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>options</td>\n<td>配置参数</td>\n<td><em>{ interval?: number; isLoop?: boolean }</em></td>\n<td><em>{ interval: 0; isLoop: false }</em></td>\n</tr>\n</tbody>\n</table>\n</div></div></template>"],"names":["render"],"mappings":";uKAMA,EAFiC,cAHlB,CAAC,EAGyC,CAAC,CAAC,SAAS,EAAAA,MAAM,CAAC,CAAC,+KCJvE,MAAM,uBAAuB,KAAlC,woIA2EY,MA3EZ"}