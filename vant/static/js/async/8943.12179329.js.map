{"version":3,"file":"static/js/async/8943.12179329.js","sources":["../../../node_modules/.pnpm/vue-loader@17.3.1_vue@3.3.4_webpack@5.89.0/node_modules/vue-loader/dist/index.js??clonedRuleSet-32.use[0]!../cjs/md-loader.cjs!../../vant/docs/markdown/use-relation.zh-CN.md","../../vant/docs/markdown/use-relation.zh-CN.md"],"sourcesContent":["import { render } from \"./use-relation.zh-CN.md.js?vue&type=template&id=95f15cd6!=!../../../../node_modules/.pnpm/vue-loader@17.3.1_vue@3.3.4_webpack@5.89.0/node_modules/vue-loader/dist/index.js??clonedRuleSet-32.use[0]!../../../vant-cli/cjs/md-loader.cjs!./use-relation.zh-CN.md?vue&type=template&id=95f15cd6\"\nconst script = {}\n\nimport exportComponent from \"../../../../node_modules/.pnpm/vue-loader@17.3.1_vue@3.3.4_webpack@5.89.0/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template><div class=\"van-doc-markdown-body\"><h1>useRelation</h1>\n<div class=\"van-doc-card\"><h3 id=\"jie-shao\" tabindex=\"-1\">介绍</h3>\n<p>建立父子组件之间的关联关系，进行数据通信和方法调用，基于 <code v-pre>provide</code> 和 <code v-pre>inject</code> 实现。</p>\n</div><h2 id=\"dai-ma-yan-shi\" tabindex=\"-1\">代码演示</h2>\n<div class=\"van-doc-card\"><h3 id=\"ji-ben-yong-fa\" tabindex=\"-1\">基本用法</h3>\n<p>在父组件中使用 <code v-pre>useChildren</code> 关联子组件:</p>\n<pre><code class=\"language-js\" v-pre><span class=\"hljs-keyword\">import</span> { ref } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vue&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { useChildren } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@vant/use&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">RELATION_KEY</span> = <span class=\"hljs-title class_\">Symbol</span>(<span class=\"hljs-string\">&#x27;my-relation&#x27;</span>);\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-title function_\">setup</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">const</span> { linkChildren } = <span class=\"hljs-title function_\">useChildren</span>(<span class=\"hljs-variable constant_\">RELATION_KEY</span>);\n\n    <span class=\"hljs-keyword\">const</span> count = <span class=\"hljs-title function_\">ref</span>(<span class=\"hljs-number\">0</span>);\n    <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">add</span> = (<span class=\"hljs-params\"></span>) =&gt; {\n      count.<span class=\"hljs-property\">value</span>++;\n    };\n\n    <span class=\"hljs-comment\">// 向子组件提供数据和方法</span>\n    <span class=\"hljs-title function_\">linkChildren</span>({ add, count });\n  },\n};\n</code></pre>\n<p>在子组件中使用 <code v-pre>useParent</code> 获取父组件提供的数据和方法:</p>\n<pre><code class=\"language-js\" v-pre><span class=\"hljs-keyword\">import</span> { useParent } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@vant/use&#x27;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-title function_\">setup</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">const</span> { parent } = <span class=\"hljs-title function_\">useParent</span>(<span class=\"hljs-variable constant_\">RELATION_KEY</span>);\n\n    <span class=\"hljs-comment\">// 调用父组件提供的数据和方法</span>\n    <span class=\"hljs-keyword\">if</span> (parent) {\n      parent.<span class=\"hljs-title function_\">add</span>();\n      <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(parent.<span class=\"hljs-property\">count</span>.<span class=\"hljs-property\">value</span>); <span class=\"hljs-comment\">// -&gt; 1</span>\n    }\n  },\n};\n</code></pre>\n</div><h2 id=\"api\" tabindex=\"-1\">API</h2>\n<div class=\"van-doc-card\"><h3 id=\"lei-xing-ding-yi\" tabindex=\"-1\">类型定义</h3>\n<pre><code class=\"language-ts\" v-pre><span class=\"hljs-keyword\">function</span> useParent&lt;T&gt;(<span class=\"hljs-attr\">key</span>: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">symbol</span>): {\n  parent?: T;\n  index?: <span class=\"hljs-title class_\">Ref</span>&lt;<span class=\"hljs-built_in\">number</span>&gt;;\n};\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">useChildren</span>(<span class=\"hljs-params\">key: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">symbol</span></span>): {\n  <span class=\"hljs-attr\">children</span>: <span class=\"hljs-title class_\">ComponentPublicInstance</span>[];\n  <span class=\"hljs-attr\">linkChildren</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">value: <span class=\"hljs-built_in\">any</span></span>) =&gt;</span> <span class=\"hljs-built_in\">void</span>;\n};\n</code></pre>\n</div><div class=\"van-doc-card\"><h3 id=\"useparent-fan-hui-zhi\" tabindex=\"-1\">useParent 返回值</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>parent</td>\n<td>父组件提供的值</td>\n<td><em>any</em></td>\n</tr>\n<tr>\n<td>index</td>\n<td>当前组件在父组件的所有子组件中对应的索引位置</td>\n<td><em>Ref&lt;number&gt;</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class=\"van-doc-card\"><h3 id=\"usechildren-fan-hui-zhi\" tabindex=\"-1\">useChildren 返回值</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>children</td>\n<td>子组件列表</td>\n<td><em>ComponentPublicInstance[]</em></td>\n</tr>\n<tr>\n<td>linkChildren</td>\n<td>向子组件提供值的方法</td>\n<td><em>(value: any) =&gt; void</em></td>\n</tr>\n</tbody>\n</table>\n</div></div></template>"],"names":["render"],"mappings":";wKAMA,EAFiC,cAHlB,CAAC,EAGyC,CAAC,CAAC,SAAS,EAAAA,MAAM,CAAC,CAAC,gLCJvE,MAAM,uBAAuB,KAAlC,gwKAgGY,MAhGZ"}